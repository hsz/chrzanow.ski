{"version":3,"sources":["utils/index.ts","containers/Header.tsx","containers/Projects.tsx","components/StackOverflow.tsx","containers/Socials.tsx","containers/Timeline.tsx","containers/App.tsx","serviceWorker.ts","index.tsx"],"names":["Colors","mq","facepaint","map","bp","Section","styled","section","marginTop","marginBottom","Logo","img","Name","h1","fontSize","Position","h2","Header","src","alt","data","name","description","url","stars","tags","undefined","Projects","dashed","itemLayout","size","dataSource","renderItem","Item","key","actions","StarOutlined","style","marginRight","tag","color","blue","Meta","title","href","StackOverflow","props","viewBox","d","fill","StyledListItem","IconWrapper","div","Content","a","alias","icon","GithubOutlined","Icon","component","LinkedinOutlined","TwitterOutlined","MailOutlined","Socials","item","dayjs","extend","customParseFormat","relativeTime","ago","to","suffix","fromNow","StyledTimelineItem","span","Title","Date","Description","Tags","date","from","ongoing","green","orange","yellow","BugOutlined","Experiences","dot","LoadingOutlined","IdcardOutlined","duration","Object","keys","Wrapper","main","StyledSection","Component","opacity","className","justify","xs","sm","StyledSocials","StyledTimeline","Timeline","StyledProjects","StyledBackTop","App","Boolean","window","location","hostname","match","globalStyles","css","rootElement","document","getElementById","hasChildNodes","hydrate","render","styles","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6786fc62.chunk.js","sourcesContent":["import facepaint from 'facepaint';\n\nexport { default as styled } from '@emotion/styled';\nexport { css } from '@emotion/core';\n\nexport enum Colors {\n  black = '#000',\n  blue = '#0b3e50',\n  yellow = '#9e9c18',\n  green = '#2b9e28',\n  orange = '#9e5d26',\n}\n\nexport const breakpoints = [576, 992, 1200, 1300];\nexport const mq = facepaint(breakpoints.map((bp) => `@media (min-width: ${bp}px)`));\n","import React from 'react';\nimport { mq, styled } from 'utils';\n\nconst Section = styled.section(\n  mq({\n    marginTop: ['2rem', '4rem'],\n    marginBottom: [0, '2rem'],\n  }),\n);\n\nconst Logo = styled.img`\n  display: block;\n  margin: 0 auto;\n`;\n\nconst Name = styled.h1`\n  margin: 0 auto;\n  text-align: center;\n  font-weight: 600;\n\n  ${mq({\n    fontSize: ['2rem', '3rem'],\n  })};\n`;\n\nconst Position = styled.h2`\n  margin: 0 auto;\n  text-align: center;\n  opacity: 0.5;\n\n  ${mq({\n    fontSize: ['0.75rem', '1rem'],\n  })};\n`;\n\nconst Header = () => (\n  <Section>\n    <Logo src=\"/logo.png\" alt=\"hsz\" />\n    <Name>Jakub Chrzanowski</Name>\n    <Position>Developer Advocate @JetBrains</Position>\n  </Section>\n);\n\nexport default Header;\n","import { StarOutlined } from '@ant-design/icons';\nimport { Divider, List, Tag } from 'antd';\nimport React from 'react';\nimport { Colors } from 'utils';\n\ninterface Project {\n  name: string;\n  description: string;\n  url?: string;\n  stars: string;\n  tags: string[];\n}\n\nconst data: Project[] = [\n  {\n    name: '.ignore IntelliJ Plugin',\n    description:\n      '.ignore plugin for JetBrains IDEs (IntelliJ, PhpStorm, PyCharm, ...) that supports dot-ignore files ' +\n      '(.gitignore, .npmignore, ...). Plugin has Over 7M downloads (2nd place in Top Downloads).',\n    url: 'https://github.com/JetBrains/idea-gitignore',\n    stars: '1k',\n    tags: ['intellij', 'java'],\n  },\n  {\n    name: 'RaspberryPi project for managing the GoPro cameras during drive',\n    description:\n      'Complex system for integration with carâ€™s onboard server for triggering the GoPro cameras ' +\n      'shutters depending on the odometer or GPS location. Development of NodeJS application for contacting and ' +\n      'triggering GoPros shutters over multiple Wi-Fi adapters at the same time on electrical impulse from the ' +\n      'onboard computer connected with RS232.',\n    url: undefined,\n    stars: 'private',\n    tags: ['nodejs', 'raspberrypi', 'low-level'],\n  },\n  {\n    name: 'webpack-nodesecurity-plugin',\n    description:\n      'NodeJS package that allows to run Node Security check on your package.json file using Webpack.',\n    url: 'https://github.com/hsz/idea-nodesecurity',\n    stars: '20+',\n    tags: ['nodejs', 'webpack', 'security'],\n  },\n  {\n    name: 'NodeSecurity IntelliJ Plugin',\n    description:\n      'IntelliJ Node Security plugin that indicates which Node packages in your project are vulnerable.',\n    url: 'https://github.com/hsz/idea-nodesecurity',\n    stars: '30+',\n    tags: ['intellij', 'kotlin', 'security'],\n  },\n  {\n    name: 'LaTeX IntelliJ Plugin',\n    description: 'LaTeX plugin for IntelliJ IDEA.',\n    url: 'https://github.com/hsz/idea-latex',\n    stars: '130+',\n    tags: ['intellij', 'java'],\n  },\n  {\n    name: 'Timber',\n    description:\n      'Contribution in Timber project, which involves Twig template system into WordPress.',\n    url: 'https://github.com/timber/timber',\n    stars: '4k+',\n    tags: ['php', 'wordpress'],\n  },\n];\n\nconst Projects = () => (\n  <>\n    <Divider dashed>Projects</Divider>\n    <List<Project>\n      itemLayout=\"vertical\"\n      size=\"large\"\n      dataSource={data}\n      renderItem={({ name, description, url, stars, tags }) => (\n        <List.Item\n          key={name}\n          actions={[\n            <span>\n              <StarOutlined style={{ marginRight: 8 }} />\n              {stars}\n            </span>,\n            <div>\n              {tags.map((tag) => (\n                <Tag key={tag} color={Colors.blue}>\n                  {tag}\n                </Tag>\n              ))}\n            </div>,\n          ]}\n        >\n          <List.Item.Meta title={url ? <a href={url}>{name}</a> : name} description={description} />\n        </List.Item>\n      )}\n    />\n  </>\n);\n\nexport default Projects;\n","import React, { SVGProps } from 'react';\n\nconst StackOverflow = (props: SVGProps<SVGSVGElement>) => (\n  <svg viewBox=\"0 0 120 120\" {...props}>\n    <path d=\"M84.4 93.8V70.6h7.7v30.9H22.6V70.6h7.7v23.2z\" fill=\"#ffffff\" />\n    <path\n      d=\"M38.8 68.4l37.8 7.9 1.6-7.6-37.8-7.9-1.6 7.6zm5-18l35 16.3 3.2-7-35-16.4-3.2 7.1zm9.7-17.2l29.7 24.7 4.9-5.9-29.7-24.7-4.9 5.9zm19.2-18.3l-6.2 4.6 23 31 6.2-4.6-23-31zM38 86h38.6v-7.7H38V86z\"\n      fill=\"#ffffff\"\n    />\n  </svg>\n);\n\nexport default StackOverflow;\n","import Icon, {\n  GithubOutlined,\n  LinkedinOutlined,\n  MailOutlined,\n  TwitterOutlined,\n} from '@ant-design/icons';\nimport { List } from 'antd';\nimport { StackOverflow } from 'components';\nimport React, { ReactNode } from 'react';\nimport { styled } from 'utils';\n\ninterface Social {\n  name: string;\n  alias: string;\n  description: string;\n  url: string;\n  icon: ReactNode;\n}\n\nconst StyledListItem = styled(List.Item)`\n  cursor: pointer;\n  padding: 0;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst IconWrapper = styled.div`\n  font-size: 2rem;\n  padding-right: 1rem;\n`;\n\nconst Content = styled.a`\n  cursor: pointer;\n  color: inherit;\n  padding: 1rem;\n  width: 100%;\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n\n  &:hover {\n    color: inherit;\n  }\n\n  small {\n    padding: 0 0.5rem;\n    opacity: 0.5;\n  }\n\n  p {\n    margin: 0;\n  }\n`;\n\nconst data: Social[] = [\n  {\n    name: 'GitHub',\n    alias: '@hsz',\n    description: 'OpenSource projects - private and contributed',\n    url: 'https://github.com/hsz',\n    icon: <GithubOutlined />,\n  },\n  {\n    name: 'StackOverflow',\n    alias: 'hsz',\n    description: '125k+ reputation with 550+ badges',\n    url: 'https://stackoverflow.com/users/223386/hsz',\n    icon: <Icon component={StackOverflow} />,\n  },\n  {\n    name: 'LinkedIn',\n    alias: 'chrzanowski',\n    description: 'Business oriented social network',\n    url: 'https://www.linkedin.com/in/chrzanowski/',\n    icon: <LinkedinOutlined />,\n  },\n  {\n    name: 'Twitter',\n    alias: '@hszanowski',\n    description: 'Follow me!',\n    url: 'https://twitter.com/hszanowski',\n    icon: <TwitterOutlined />,\n  },\n  {\n    name: 'E-mail',\n    alias: 'jakub@chrzanow.ski',\n    description: 'Feel free to mail me',\n    url: 'mailto:jakub@chrzanow.ski',\n    icon: <MailOutlined />,\n  },\n];\n\nconst Socials = () => (\n  <List\n    dataSource={data}\n    itemLayout=\"horizontal\"\n    renderItem={(item) => (\n      <StyledListItem key={item.name}>\n        <Content href={item.url}>\n          <IconWrapper>{item.icon}</IconWrapper>\n          <div>\n            <strong>{item.name}</strong>\n            <small>{item.alias}</small>\n            <p>{item.description}</p>\n          </div>\n        </Content>\n      </StyledListItem>\n    )}\n  />\n);\n\nexport default Socials;\n","import { BugOutlined, IdcardOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Divider, Tag, Timeline } from 'antd';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport React, { ReactNode } from 'react';\nimport { Colors, styled } from 'utils';\n\ndayjs.extend(customParseFormat);\ndayjs.extend(relativeTime);\n\ninterface Experience {\n  name: string;\n  date: {\n    from: string;\n    to?: string;\n  };\n  ongoing?: boolean;\n  icon?: ReactNode;\n  description?: string;\n  tags: { [key in Colors]?: string[] };\n}\n\nconst format = 'YYYY.MM';\nconst duration = (from: string, to: string) => dayjs(from, format).from(dayjs(to, format));\nconst ago = (to: string, suffix = true) => dayjs(to, format).fromNow(!suffix);\n\nconst StyledTimelineItem = styled(Timeline.Item)`\n  .ant-timeline-item-tail {\n    top: 30px;\n    height: calc(100% - 50px);\n  }\n\n  .ant-timeline-item-content {\n    margin-left: 30px;\n  }\n`;\n\nconst IconWrapper = styled.span`\n  font-size: 1.5rem;\n`;\n\nconst Title = styled.span`\n  font-weight: bold;\n  font-size: 1rem;\n`;\n\nconst Date = styled.span`\n  font-size: 0.9rem;\n  padding-left: 0.5rem;\n  opacity: 0.5;\n`;\n\nconst Description = styled.div`\n  font-style: italic;\n  font-size: 0.9rem;\n  padding: 0.5rem 0;\n`;\n\nconst Tags = styled.div`\n  .ant-tag {\n    margin: 0.2rem;\n  }\n`;\n\nconst data: Experience[] = [\n  {\n    name: 'JetBrains',\n    date: { from: '2020.01' },\n    ongoing: true,\n    description: 'Developer Advocate',\n    tags: {\n      [Colors.blue]: ['ðŸ¥‘'],\n      [Colors.green]: ['java', 'kotlin', 'terraform'],\n      [Colors.orange]: ['git', 'teamcity', 'aws'],\n    },\n  },\n  {\n    name: 'HSZ',\n    date: { from: '2013.02' },\n    description: 'Owner, freelancer, JetBrains plugins development.',\n    ongoing: true,\n    tags: {\n      [Colors.blue]: ['owner', 'developer'],\n      [Colors.yellow]: ['web', 'raspberry pi', 'security', 'api'],\n      [Colors.green]: ['nodejs', 'react', 'sql', 'java', 'kotlin', 'symfony2'],\n      [Colors.orange]: ['git', 'travis', 'aws'],\n    },\n  },\n  {\n    name: 'Meelogic',\n    date: { from: '2014.07', to: '2020.01' },\n    description: 'Web and Android development. Technical leader, architect and recruiter.',\n    tags: {\n      [Colors.blue]: ['pm', 'tech lead', 'developer'],\n      [Colors.yellow]: ['web', 'mobile', 'security', 'api'],\n      [Colors.green]: ['nodejs', 'react', 'typescript', 'php', 'sql', 'java', 'android'],\n      [Colors.orange]: ['aws', 'jira', 'git', 'jenkins'],\n    },\n  },\n  {\n    name: 'Freedomes',\n    date: { from: '2012.11', to: '2014.06' },\n    description:\n      'PM, Technical leader. Websites and internal applications development for managing the company.',\n    tags: {\n      [Colors.blue]: ['pm', 'tech lead', 'developer'],\n      [Colors.yellow]: ['web'],\n      [Colors.green]: ['php', 'symfony2', 'sass'],\n      [Colors.orange]: ['git', 'wordpress'],\n    },\n  },\n  {\n    name: 'SB Betting Software',\n    date: { from: '2012.07', to: '2012.10' },\n    description: 'Planning and development of Android applications with WebServices in Java.',\n    tags: {\n      [Colors.blue]: ['developer'],\n      [Colors.yellow]: ['mobile', 'api'],\n      [Colors.green]: ['java', 'j2ee'],\n      [Colors.orange]: ['git'],\n    },\n  },\n  {\n    name: 'BL Stream',\n    date: { from: '2010.10', to: '2012.07' },\n    description:\n      'Implementation of projects based on the Android platform and J2EE in Java and jQuery, CSS.',\n    tags: {\n      [Colors.blue]: ['developer'],\n      [Colors.yellow]: ['web', 'mobile'],\n      [Colors.green]: ['java', 'j2ee', 'android'],\n      [Colors.orange]: ['git', 'svn'],\n    },\n  },\n  {\n    name: 'Magnetic Point',\n    date: { from: '2008.07', to: '2010.10' },\n    description: 'CMS system development for websites based on Zend Framework in PHP.',\n    tags: {\n      [Colors.blue]: ['developer'],\n      [Colors.yellow]: ['web'],\n      [Colors.green]: ['php', 'zend framework', 'jquery'],\n      [Colors.orange]: ['svn'],\n    },\n  },\n  {\n    name: 'and many others...',\n    date: { from: '2006.10', to: '2008.07' },\n    icon: <BugOutlined />,\n    tags: {},\n  },\n];\n\nconst Experiences = () => (\n  <>\n    <Divider dashed>Timeline</Divider>\n    <Timeline>\n      {data.map(({ name, description, ongoing, icon, tags, date: { from, to } }) => (\n        <StyledTimelineItem\n          key={name}\n          dot={\n            <IconWrapper>\n              {icon || (ongoing ? <LoadingOutlined /> : <IdcardOutlined />)}\n            </IconWrapper>\n          }\n          color=\"#ffffff\"\n        >\n          <Title>{name}</Title>\n          <Date>\n            {to ? `for ${duration(from, to)}, ${ago(from)}` : `since ${ago(from, false)}`}\n          </Date>\n          {description && <Description>{description}</Description>}\n          {(Object.keys(tags) as Colors[]).map((color) => (\n            <Tags key={color}>\n              {(tags[color] || []).map((tag) => (\n                <Tag color={color} key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </Tags>\n          ))}\n        </StyledTimelineItem>\n      ))}\n    </Timeline>\n  </>\n);\n\nexport default Experiences;\n","import { BackTop, Col, Row } from 'antd';\nimport { Header, Projects, Socials, Timeline } from 'containers';\nimport React, { FunctionComponent } from 'react';\nimport { styled } from 'utils';\n\nconst Wrapper = styled.main`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-size: cover;\n  background: url('/background.jpg') fixed top;\n`;\n\nconst StyledSection = (Component: FunctionComponent, opacity = 0) =>\n  styled(({ className }) => (\n    <Row className={className} justify=\"space-around\">\n      <Col xs={24} sm={12}>\n        <Component />\n      </Col>\n    </Row>\n  ))`\n    width: 100%;\n    background-color: rgba(0, 0, 0, ${opacity});\n    padding: 2rem 1rem;\n  `;\n\nconst StyledSocials = StyledSection(Socials);\nconst StyledTimeline = StyledSection(Timeline, 0.25);\nconst StyledProjects = StyledSection(Projects, 0.5);\nconst StyledBackTop = styled(BackTop)`\n  .ant-back-top-content {\n    background-color: rgba(255, 255, 255, 0.25);\n  }\n`;\n\nconst App = () => (\n  <Wrapper className=\"ibm\">\n    <Header />\n    <StyledSocials />\n    <StyledTimeline />\n    <StyledProjects />\n    <StyledBackTop />\n  </Wrapper>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { Global } from '@emotion/core';\nimport '@ibm/type/css/ibm-type.min.css';\nimport App from 'containers/App';\nimport React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport { css } from 'utils';\nimport * as serviceWorker from './serviceWorker';\n\nconst globalStyles = css`\n  body,\n  html {\n    height: 100%;\n  }\n\n  .ibm {\n    letter-spacing: 1px;\n  }\n`;\n\nconst rootElement = document.getElementById('root');\n(rootElement?.hasChildNodes() ? hydrate : render)(\n  <>\n    <Global styles={globalStyles} />\n    <App />\n  </>,\n  rootElement,\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}